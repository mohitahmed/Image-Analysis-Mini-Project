tic
data = importdata('Train/labels.txt');
img_nrs = data(:,1);
true_labels = data(:,(2:4));

my_labels = zeros(size(true_labels));


N = 1000

for n = 1:N
    k = img_nrs(n);
    im = imread(sprintf('Train/captcha_%04d.png', k));
    my_labels(k,:) = myclassifier(im);
end

fprintf('\n\nAccuracy: \n');
fprintf('%f\n\n',mean(sum(abs(true_labels - my_labels),2)==0));
toc





data = importdata('Train/labels.txt');
img_nrs = data(:,1);
true_labels = data(:,(2:4));

train = 1000;
test = 200;
train_labels = {};
test_labels = {};

train_patterns = [];
test_patterns = [];

fprintf('Extracting Training Digits...\n');
% a = extractDigits1(imread("Train\captcha_1100.png"));
% y(end+1,:) = BasicFeatureExtraction(a{1});

%TRAINING
for i=1:train
    if i < 10
        a = extractDigits1(imread(strcat(strcat('Train/captcha_000',num2str(i)),'.png'))); 
    elseif i >= 10 && i < 100
        a = extractDigits1(imread(strcat(strcat('Train/captcha_00',num2str(i)),'.png'))); 
    elseif i >=100 && i < 1000
        a = extractDigits1(imread(strcat(strcat('Train/captcha_0',num2str(i)),'.png'))); 
    elseif i >= 1000
        a = extractDigits1(imread(strcat(strcat('Train/captcha_',num2str(i)),'.png'))); 
    end

    for j=1:3
            train_patterns(end+1,:) = a(j,:);
            train_labels{end+1} = num2str(true_labels(i,j));
    end

end

fprintf('Extracting Testing Digits...\n');

% test
for i=1:test
    if i+train < 10
        a = extractDigits1(imread(strcat(strcat('Train/captcha_000',num2str(i+train)),'.png'))); 
    elseif i+train >= 10 && i+train < 100
        a = extractDigits1(imread(strcat(strcat('Train/captcha_00',num2str(i+rain)),'.png'))); 
    elseif i+train >=100 && i+train < 1000
        a = extractDigits1(imread(strcat(strcat('Train/captcha_0',num2str(i+ntrain)),'.png'))); 
    elseif i+train >= 1000
        a = extractDigits1(imread(strcat(strcat('Train/captcha_',num2str(i+train)),'.png'))); 
    end

    for j=1:3
            test_patterns(end+1,:) = a(j,:);
            test_labels{end+1} = num2str(true_labels(i+train,j));
    end


end
dist=pdist2(test_patterns,train_patterns); %Pairwise distance from each validation pattern to all training patterns
y = categorical(transpose(train_labels));
x = categorical(transpose(test_labels));
k=3;
Mdl = fitcknn(train_patterns,y, 'NumNeighbors',k, 'BreakTies','nearest');
validation_pred = predict(Mdl,test_patterns);



accuracy = mean(validation_pred == x);
fprintf('Validation accuracy: %5.2f%%\n',accuracy*100);

f=figure(2);
if (f.Position(3)<800)
	set(f,'Position',get(f,'Position').*[1,1,1.5,1.5]); %Enlarge figure
end
confusionchart(x, validation_pred, 'ColumnSummary','column-normalized', 'RowSummary','row-normalized');
title(sprintf('Validation accuracy: %5.2f%%\n',accuracy*100));

